{"ast":null,"code":"import{useEffect,useState,useMemo,useCallback}from\"react\";import{MapContainer,TileLayer,LayersControl,useMap,CircleMarker,Tooltip,Circle}from\"react-leaflet\";import\"leaflet/dist/leaflet.css\";import L from\"leaflet\";import\"leaflet.heat\";import\"./MapView.css\";import{DateTime}from\"./DateTime\";// Cluster colors\nimport{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const getClusterColor=clusterId=>{const colors=[\"#FF6B6B\",\"#4ECDC4\",\"#45B7D1\",\"#96CEB4\",\"#FFEAA7\",\"#DDA0DD\",\"#98D8C8\",\"#F7DC6F\",\"#BB8FCE\",\"#85C1E9\",\"#F8C471\",\"#82E0AA\",\"#F1948A\",\"#85C1E9\",\"#D7DBDD\"];return clusterId===-1?\"#95A5A6\":colors[clusterId%colors.length];};// ðŸ”’ San Fernando bounding box\nconst sanFernandoBounds=[[14.9666,120.5874],// Southwest\n[15.0858,120.7722]// Northeast\n];// Heatmap layer\nfunction ClusteredHeatmapLayer(_ref){let{accidentData,showHeatmap}=_ref;const map=useMap();const heatmapPoints=useMemo(()=>{if(!accidentData||!showHeatmap)return[];return accidentData.features.filter(f=>f.properties.type===\"accident_point\").map(_ref2=>{let{geometry,properties}=_ref2;if(!geometry||!geometry.coordinates)return null;const[lng,lat]=geometry.coordinates;if(typeof lat!==\"number\"||typeof lng!==\"number\")return null;let intensity=0.5;if(properties.severity){const severityMap={Critical:1.0,High:0.8,Medium:0.6,Low:0.4,Minor:0.2};intensity=severityMap[properties.severity]||0.5;}return[lat,lng,intensity];}).filter(Boolean);},[accidentData,showHeatmap]);useEffect(()=>{if(!showHeatmap||heatmapPoints.length===0)return;const heatLayer=L.heatLayer(heatmapPoints,{radius:25,blur:15,maxZoom:18,gradient:{0.2:\"blue\",0.4:\"cyan\",0.6:\"lime\",0.8:\"yellow\",1.0:\"red\"},minOpacity:0.4});map.addLayer(heatLayer);return()=>map.removeLayer(heatLayer);},[map,heatmapPoints,showHeatmap]);return null;}// Cluster circles\nfunction ClusterCenters(_ref3){let{clusterCenters,showClusters}=_ref3;if(!showClusters||!clusterCenters)return null;return/*#__PURE__*/_jsx(_Fragment,{children:clusterCenters.map(f=>{var _properties$barangays;const[lng,lat]=f.geometry.coordinates;const{properties}=f;const color=getClusterColor(properties.cluster_id);const radius=Math.min(Math.sqrt(properties.accident_count)*30,200);return/*#__PURE__*/_jsx(Circle,{center:[lat,lng],radius:radius,pathOptions:{fillColor:color,fillOpacity:0.15,color:color,weight:2,opacity:0.6},children:/*#__PURE__*/_jsx(Tooltip,{direction:\"top\",offset:[0,-10],opacity:1,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mapview-tooltip\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"b\",{children:[\"Cluster #\",properties.cluster_id]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Accidents:\"}),\" \",properties.accident_count]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Location:\"}),\" \",lat.toFixed(4),\", \",lng.toFixed(4)]}),((_properties$barangays=properties.barangays)===null||_properties$barangays===void 0?void 0:_properties$barangays.length)>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Areas:\"}),\" \",properties.barangays.slice(0,2).join(\", \"),properties.barangays.length>2?\"...\":\"\"]})]})})},`cluster-${properties.cluster_id}`);})});}// Accident markers\nfunction AccidentMarkers(_ref4){let{accidentPoints,showMarkers}=_ref4;if(!showMarkers||!accidentPoints)return null;return/*#__PURE__*/_jsx(_Fragment,{children:accidentPoints.map((f,idx)=>{const{geometry,properties}=f;const[lng,lat]=geometry.coordinates;const clusterColor=getClusterColor(properties.cluster);const isNoise=properties.cluster===-1;return/*#__PURE__*/_jsx(CircleMarker,{center:[lat,lng],radius:isNoise?3:4,pathOptions:{fillColor:clusterColor,fillOpacity:isNoise?0.4:0.7,color:clusterColor,weight:1,opacity:isNoise?0.6:0.9},children:/*#__PURE__*/_jsx(Tooltip,{direction:\"top\",offset:[0,-5],opacity:1,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mapview-tooltip\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Cluster:\"}),\" \",isNoise?\"Noise\":`#${properties.cluster}`]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Type:\"}),\" \",properties.offensetype||\"N/A\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Severity:\"}),\" \",properties.severity||\"N/A\"]}),properties.barangay&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Area:\"}),\" \",properties.barangay]})]})})},`accident-${idx}`);})});}// Main component\nexport default function MapView(){const[accidentData,setAccidentData]=useState(null);const[showClusters,setShowClusters]=useState(true);const[showHeatmap,setShowHeatmap]=useState(true);const[showMarkers,setShowMarkers]=useState(false);const[loading,setLoading]=useState(true);const{accidentPoints,clusterCenters,stats}=useMemo(()=>{if(!accidentData)return{accidentPoints:[],clusterCenters:[],stats:null};const accidents=accidentData.features.filter(f=>f.properties.type===\"accident_point\");const clusters=accidentData.features.filter(f=>f.properties.type===\"cluster_center\");return{accidentPoints:accidents,clusterCenters:clusters,stats:{totalAccidents:accidents.length,totalClusters:clusters.length,noisePoints:accidents.filter(f=>f.properties.cluster===-1).length}};},[accidentData]);useEffect(()=>{async function fetchData(){setLoading(true);try{var _data$features;const res=await fetch(\"https://crime-map-proto.onrender.com/data/accidents_clustered.geojson\");if(!res.ok)throw new Error(`HTTP error! status: ${res.status}`);const data=await res.json();setAccidentData(data);console.log(\"Loaded clustered data:\",(_data$features=data.features)===null||_data$features===void 0?void 0:_data$features.length,\"features\");}catch(err){console.error(\"Failed to load clustered GeoJSON:\",err);}finally{setLoading(false);}}fetchData();},[]);const handleToggle=useCallback(setter=>e=>setter(e.target.checked),[]);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"scroll-wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"mapview-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"page-header\",children:[/*#__PURE__*/_jsx(\"h6\",{className:\"page-title\",children:\"Loading Clustered Data...\"}),/*#__PURE__*/_jsx(DateTime,{})]})})});}return/*#__PURE__*/_jsx(\"div\",{className:\"scroll-wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mapview-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-header\",children:[/*#__PURE__*/_jsx(\"h6\",{className:\"page-title\",children:\"Clustered Accident Heatmap\"}),/*#__PURE__*/_jsx(DateTime,{})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"controls-panel\",style:{padding:\"8px 12px\",marginBottom:\"8px\",backgroundColor:\"#f8f9fa\",border:\"1px solid #ddd\",borderRadius:\"6px\",display:\"flex\",gap:\"16px\",alignItems:\"center\",fontSize:\"14px\",boxShadow:\"0 1px 3px rgba(0,0,0,0.1)\",color:\"#000\"},children:[/*#__PURE__*/_jsxs(\"label\",{style:{display:\"flex\",alignItems:\"center\",gap:\"4px\"},children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:showHeatmap,onChange:handleToggle(setShowHeatmap)}),\" Heatmap\"]}),/*#__PURE__*/_jsxs(\"label\",{style:{display:\"flex\",alignItems:\"center\",gap:\"4px\"},children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:showClusters,onChange:handleToggle(setShowClusters)}),\" Clusters\"]}),/*#__PURE__*/_jsxs(\"label\",{style:{display:\"flex\",alignItems:\"center\",gap:\"4px\"},children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:showMarkers,onChange:handleToggle(setShowMarkers)}),\" Points\"]}),stats&&/*#__PURE__*/_jsxs(\"div\",{className:\"stats\",style:{marginLeft:\"auto\",fontSize:\"12px\",color:\"#000000ff\",fontStyle:\"italic\"},children:[stats.totalAccidents,\" accidents \\u2022 \",stats.totalClusters,\" clusters \\u2022 \",stats.noisePoints,\" noise\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"map-card\",children:/*#__PURE__*/_jsx(\"div\",{className:\"mapview-wrapper\",children:/*#__PURE__*/_jsxs(MapContainer,{center:[15.0306,120.6845],zoom:14,minZoom:12,maxZoom:18,scrollWheelZoom:true,className:\"mapview-map\",preferCanvas:true,updateWhenZooming:false,updateWhenIdle:true,maxBounds:sanFernandoBounds// ðŸ”’ Lock map to San Fernando\n,maxBoundsViscosity:1.0// 1 = hard lock\n,children:[/*#__PURE__*/_jsxs(LayersControl,{position:\"topright\",children:[/*#__PURE__*/_jsx(LayersControl.BaseLayer,{checked:true,name:\"Light\",children:/*#__PURE__*/_jsx(TileLayer,{url:\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\",attribution:\"\\xA9 CartoDB\"})}),/*#__PURE__*/_jsx(LayersControl.BaseLayer,{name:\"Streets\",children:/*#__PURE__*/_jsx(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",attribution:\"\\xA9 OpenStreetMap contributors\"})}),/*#__PURE__*/_jsx(LayersControl.BaseLayer,{name:\"Dark\",children:/*#__PURE__*/_jsx(TileLayer,{url:\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\",attribution:\"\\xA9 CartoDB\"})})]}),/*#__PURE__*/_jsx(ClusteredHeatmapLayer,{accidentData:accidentData,showHeatmap:showHeatmap}),/*#__PURE__*/_jsx(ClusterCenters,{clusterCenters:clusterCenters,showClusters:showClusters}),/*#__PURE__*/_jsx(AccidentMarkers,{accidentPoints:accidentPoints,showMarkers:showMarkers})]})})})]})});}","map":{"version":3,"names":["useEffect","useState","useMemo","useCallback","MapContainer","TileLayer","LayersControl","useMap","CircleMarker","Tooltip","Circle","L","DateTime","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","getClusterColor","clusterId","colors","length","sanFernandoBounds","ClusteredHeatmapLayer","_ref","accidentData","showHeatmap","map","heatmapPoints","features","filter","f","properties","type","_ref2","geometry","coordinates","lng","lat","intensity","severity","severityMap","Critical","High","Medium","Low","Minor","Boolean","heatLayer","radius","blur","maxZoom","gradient","minOpacity","addLayer","removeLayer","ClusterCenters","_ref3","clusterCenters","showClusters","children","_properties$barangays","color","cluster_id","Math","min","sqrt","accident_count","center","pathOptions","fillColor","fillOpacity","weight","opacity","direction","offset","className","toFixed","barangays","slice","join","AccidentMarkers","_ref4","accidentPoints","showMarkers","idx","clusterColor","cluster","isNoise","offensetype","barangay","MapView","setAccidentData","setShowClusters","setShowHeatmap","setShowMarkers","loading","setLoading","stats","accidents","clusters","totalAccidents","totalClusters","noisePoints","fetchData","_data$features","res","fetch","ok","Error","status","data","json","console","log","err","error","handleToggle","setter","e","target","checked","style","padding","marginBottom","backgroundColor","border","borderRadius","display","gap","alignItems","fontSize","boxShadow","onChange","marginLeft","fontStyle","zoom","minZoom","scrollWheelZoom","preferCanvas","updateWhenZooming","updateWhenIdle","maxBounds","maxBoundsViscosity","position","BaseLayer","name","url","attribution"],"sources":["C:/Users/Jan Nikko/Downloads/crime-map-proto/frontend/src/MapView.js"],"sourcesContent":["import { useEffect, useState, useMemo, useCallback } from \"react\";\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  LayersControl,\r\n  useMap,\r\n  CircleMarker,\r\n  Tooltip,\r\n  Circle,\r\n} from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet.heat\";\r\nimport \"./MapView.css\";\r\nimport { DateTime } from \"./DateTime\";\r\n\r\n// Cluster colors\r\nconst getClusterColor = (clusterId) => {\r\n  const colors = [\r\n    \"#FF6B6B\", \"#4ECDC4\", \"#45B7D1\", \"#96CEB4\", \"#FFEAA7\",\r\n    \"#DDA0DD\", \"#98D8C8\", \"#F7DC6F\", \"#BB8FCE\", \"#85C1E9\",\r\n    \"#F8C471\", \"#82E0AA\", \"#F1948A\", \"#85C1E9\", \"#D7DBDD\",\r\n  ];\r\n  return clusterId === -1 ? \"#95A5A6\" : colors[clusterId % colors.length];\r\n};\r\n\r\n// ðŸ”’ San Fernando bounding box\r\nconst sanFernandoBounds = [\r\n  [14.9666, 120.5874], // Southwest\r\n  [15.0858, 120.7722], // Northeast\r\n];\r\n\r\n// Heatmap layer\r\nfunction ClusteredHeatmapLayer({ accidentData, showHeatmap }) {\r\n  const map = useMap();\r\n\r\n  const heatmapPoints = useMemo(() => {\r\n    if (!accidentData || !showHeatmap) return [];\r\n\r\n    return accidentData.features\r\n      .filter((f) => f.properties.type === \"accident_point\")\r\n      .map(({ geometry, properties }) => {\r\n        if (!geometry || !geometry.coordinates) return null;\r\n        const [lng, lat] = geometry.coordinates;\r\n        if (typeof lat !== \"number\" || typeof lng !== \"number\") return null;\r\n\r\n        let intensity = 0.5;\r\n        if (properties.severity) {\r\n          const severityMap = {\r\n            Critical: 1.0,\r\n            High: 0.8,\r\n            Medium: 0.6,\r\n            Low: 0.4,\r\n            Minor: 0.2,\r\n          };\r\n          intensity = severityMap[properties.severity] || 0.5;\r\n        }\r\n\r\n        return [lat, lng, intensity];\r\n      })\r\n      .filter(Boolean);\r\n  }, [accidentData, showHeatmap]);\r\n\r\n  useEffect(() => {\r\n    if (!showHeatmap || heatmapPoints.length === 0) return;\r\n\r\n    const heatLayer = L.heatLayer(heatmapPoints, {\r\n      radius: 25,\r\n      blur: 15,\r\n      maxZoom: 18,\r\n      gradient: {\r\n        0.2: \"blue\",\r\n        0.4: \"cyan\",\r\n        0.6: \"lime\",\r\n        0.8: \"yellow\",\r\n        1.0: \"red\",\r\n      },\r\n      minOpacity: 0.4,\r\n    });\r\n\r\n    map.addLayer(heatLayer);\r\n    return () => map.removeLayer(heatLayer);\r\n  }, [map, heatmapPoints, showHeatmap]);\r\n\r\n  return null;\r\n}\r\n\r\n// Cluster circles\r\nfunction ClusterCenters({ clusterCenters, showClusters }) {\r\n  if (!showClusters || !clusterCenters) return null;\r\n\r\n  return (\r\n    <>\r\n      {clusterCenters.map((f) => {\r\n        const [lng, lat] = f.geometry.coordinates;\r\n        const { properties } = f;\r\n        const color = getClusterColor(properties.cluster_id);\r\n        const radius = Math.min(Math.sqrt(properties.accident_count) * 30, 200);\r\n\r\n        return (\r\n          <Circle\r\n            key={`cluster-${properties.cluster_id}`}\r\n            center={[lat, lng]}\r\n            radius={radius}\r\n            pathOptions={{\r\n              fillColor: color,\r\n              fillOpacity: 0.15,\r\n              color: color,\r\n              weight: 2,\r\n              opacity: 0.6,\r\n            }}\r\n          >\r\n            <Tooltip direction=\"top\" offset={[0, -10]} opacity={1}>\r\n              <div className=\"mapview-tooltip\">\r\n                <div><b>Cluster #{properties.cluster_id}</b></div>\r\n                <div><b>Accidents:</b> {properties.accident_count}</div>\r\n                <div><b>Location:</b> {lat.toFixed(4)}, {lng.toFixed(4)}</div>\r\n                {properties.barangays?.length > 0 && (\r\n                  <div>\r\n                    <b>Areas:</b> {properties.barangays.slice(0, 2).join(\", \")}\r\n                    {properties.barangays.length > 2 ? \"...\" : \"\"}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Tooltip>\r\n          </Circle>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\n// Accident markers\r\nfunction AccidentMarkers({ accidentPoints, showMarkers }) {\r\n  if (!showMarkers || !accidentPoints) return null;\r\n\r\n  return (\r\n    <>\r\n      {accidentPoints.map((f, idx) => {\r\n        const { geometry, properties } = f;\r\n        const [lng, lat] = geometry.coordinates;\r\n        const clusterColor = getClusterColor(properties.cluster);\r\n        const isNoise = properties.cluster === -1;\r\n\r\n        return (\r\n          <CircleMarker\r\n            key={`accident-${idx}`}\r\n            center={[lat, lng]}\r\n            radius={isNoise ? 3 : 4}\r\n            pathOptions={{\r\n              fillColor: clusterColor,\r\n              fillOpacity: isNoise ? 0.4 : 0.7,\r\n              color: clusterColor,\r\n              weight: 1,\r\n              opacity: isNoise ? 0.6 : 0.9,\r\n            }}\r\n          >\r\n            <Tooltip direction=\"top\" offset={[0, -5]} opacity={1}>\r\n              <div className=\"mapview-tooltip\">\r\n                <div><b>Cluster:</b> {isNoise ? \"Noise\" : `#${properties.cluster}`}</div>\r\n                <div><b>Type:</b> {properties.offensetype || \"N/A\"}</div>\r\n                <div><b>Severity:</b> {properties.severity || \"N/A\"}</div>\r\n                {properties.barangay && <div><b>Area:</b> {properties.barangay}</div>}\r\n              </div>\r\n            </Tooltip>\r\n          </CircleMarker>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\n// Main component\r\nexport default function MapView() {\r\n  const [accidentData, setAccidentData] = useState(null);\r\n  const [showClusters, setShowClusters] = useState(true);\r\n  const [showHeatmap, setShowHeatmap] = useState(true);\r\n  const [showMarkers, setShowMarkers] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const { accidentPoints, clusterCenters, stats } = useMemo(() => {\r\n    if (!accidentData) return { accidentPoints: [], clusterCenters: [], stats: null };\r\n\r\n    const accidents = accidentData.features.filter((f) => f.properties.type === \"accident_point\");\r\n    const clusters = accidentData.features.filter((f) => f.properties.type === \"cluster_center\");\r\n\r\n    return {\r\n      accidentPoints: accidents,\r\n      clusterCenters: clusters,\r\n      stats: {\r\n        totalAccidents: accidents.length,\r\n        totalClusters: clusters.length,\r\n        noisePoints: accidents.filter((f) => f.properties.cluster === -1).length,\r\n      },\r\n    };\r\n  }, [accidentData]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      setLoading(true);\r\n      try {\r\n        const res = await fetch(\r\n          \"https://crime-map-proto.onrender.com/data/accidents_clustered.geojson\"\r\n        );\r\n        if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);\r\n        const data = await res.json();\r\n        setAccidentData(data);\r\n        console.log(\"Loaded clustered data:\", data.features?.length, \"features\");\r\n      } catch (err) {\r\n        console.error(\"Failed to load clustered GeoJSON:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleToggle = useCallback((setter) => (e) => setter(e.target.checked), []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"scroll-wrapper\">\r\n        <div className=\"mapview-container\">\r\n          <div className=\"page-header\">\r\n            <h6 className=\"page-title\">Loading Clustered Data...</h6>\r\n            <DateTime />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"scroll-wrapper\">\r\n      <div className=\"mapview-container\">\r\n        <div className=\"page-header\">\r\n          <h6 className=\"page-title\">Clustered Accident Heatmap</h6>\r\n          <DateTime />\r\n        </div>\r\n\r\n        {/* Controls */}\r\n        <div \r\n        className=\"controls-panel\"\r\n        style={{\r\n        padding: \"8px 12px\",\r\n        marginBottom: \"8px\",\r\n        backgroundColor: \"#f8f9fa\",\r\n        border: \"1px solid #ddd\",\r\n        borderRadius: \"6px\",\r\n        display: \"flex\",\r\n        gap: \"16px\",\r\n        alignItems: \"center\",\r\n        fontSize: \"14px\",\r\n        boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\",\r\n        color: \"#000\"\r\n      }}\r\n    >\r\n      <label style={{ display: \"flex\", alignItems: \"center\", gap: \"4px\" }}>\r\n        <input type=\"checkbox\" checked={showHeatmap} onChange={handleToggle(setShowHeatmap)} /> Heatmap\r\n      </label>\r\n      <label style={{ display: \"flex\", alignItems: \"center\", gap: \"4px\" }}>\r\n        <input type=\"checkbox\" checked={showClusters} onChange={handleToggle(setShowClusters)} /> Clusters\r\n      </label>\r\n      <label style={{ display: \"flex\", alignItems: \"center\", gap: \"4px\" }}>\r\n        <input type=\"checkbox\" checked={showMarkers} onChange={handleToggle(setShowMarkers)} /> Points\r\n      </label>\r\n      {stats && (\r\n        <div \r\n          className=\"stats\"\r\n          style={{\r\n            marginLeft: \"auto\",\r\n            fontSize: \"12px\",\r\n            color: \"#000000ff\",\r\n            fontStyle: \"italic\"\r\n          }}\r\n        >\r\n          {stats.totalAccidents} accidents â€¢ {stats.totalClusters} clusters â€¢ {stats.noisePoints} noise\r\n        </div>\r\n      )}\r\n    </div>\r\n\r\n        {/* Map */}\r\n        <div className=\"map-card\">\r\n          <div className=\"mapview-wrapper\">\r\n            <MapContainer\r\n              center={[15.0306, 120.6845]}\r\n              zoom={14}\r\n              minZoom={12}\r\n              maxZoom={18}\r\n              scrollWheelZoom={true}\r\n              className=\"mapview-map\"\r\n              preferCanvas={true}\r\n              updateWhenZooming={false}\r\n              updateWhenIdle={true}\r\n              maxBounds={sanFernandoBounds}  // ðŸ”’ Lock map to San Fernando\r\n              maxBoundsViscosity={1.0}       // 1 = hard lock\r\n            >\r\n              <LayersControl position=\"topright\">\r\n                <LayersControl.BaseLayer checked name=\"Light\">\r\n                  <TileLayer\r\n                    url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\"\r\n                    attribution=\"Â© CartoDB\"\r\n                  />\r\n                </LayersControl.BaseLayer>\r\n                <LayersControl.BaseLayer name=\"Streets\">\r\n                  <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    attribution=\"Â© OpenStreetMap contributors\"\r\n                  />\r\n                </LayersControl.BaseLayer>\r\n                <LayersControl.BaseLayer name=\"Dark\">\r\n                  <TileLayer\r\n                    url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\"\r\n                    attribution=\"Â© CartoDB\"\r\n                  />\r\n                </LayersControl.BaseLayer>\r\n              </LayersControl>\r\n\r\n              <ClusteredHeatmapLayer accidentData={accidentData} showHeatmap={showHeatmap} />\r\n              <ClusterCenters clusterCenters={clusterCenters} showClusters={showClusters} />\r\n              <AccidentMarkers accidentPoints={accidentPoints} showMarkers={showMarkers} />\r\n            </MapContainer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}